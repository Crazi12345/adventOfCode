#include <iostream>
#include <fstream>
#include <iterator>
#include <ostream>
#include <string>
int string_to_int(std::string number){
    if(number == "one"){
        return 1;
    }
    else if(number == "two"){
        return 2;
    }
    else if(number == "three"){
        return 3;
    }
    else if(number == "four"){
        return 4;
    }
    else if(number == "five"){
        return 5;
    }
    else if(number == "six"){
        return 6;
    }
    else if(number == "seven"){
        return 7;
    }
    else if(number == "eight"){
        return 8;
    }
    else if(number == "nine"){
        return 9;
    }
    else if(number == "zero"){
        return 0;
    }
    return -1;
}
int main(){

    std::ifstream myfile ("test_input.txt");
    std::string mystring;
    int sum = 0;
    char first = ' ';
    char last = ' ';
    bool isFirst = true;
    if(myfile.is_open()){
        while(true){
            myfile >> mystring;
            isFirst = true;
            if(!myfile.good()){
                break;
            }
            for(int i = 0; i<mystring.size();i++){
                for(int j = 3; j<6;j++){
                    int num = string_to_int(mystring.substr(i,i+3));
                    std::cout<< mystring.substr(i,i+j)<< "  " << num <<std::endl;
                    if(num != -1){
                        mystring.replace(i,i+j,std::to_string(num));
                        i = 0;
                    }
                }

            }
           for(int i = 0; i<mystring.size();i++){
                    if(mystring[i]<58 && mystring[i]>47){
                        if(isFirst){
                            first = mystring[i];
                            isFirst = false;
                        }
                        last = mystring[i];
                    }
             //       std::cout << mystring[i];
                   }

           char number[2] = {first,last};
           std::cout << "  " << number;
           sum += atoi(number);
           std::cout << std::endl;
        }
    }
    std::cout <<sum << std::endl;
    return 0;

}

std::string custom_substring(int start, int end, std::string full_string){
    char word[end-start];
    for(int i = start; i < end; i++){
                
    }
    
}
